#!/bin/bash

##preprocessing (trim_galore and kraken2)

#trim_galore, "--paired" is very important if following steps treat sequences in a paired-read way. 
#the last line is the file's name; the number of cores can be changed, but 10 seems to be an optimal choice based on trim_galore's instruction. 
trim_galore \
--cores 10 \
--fastqc \
--illumina \
--length 70 \
--quality 30 \
--paired \
<file_name: e.g.: 10B_1.fastq.gz  10B_2.fastq.gz, use space to seperate> \

#kraken2
kraken2 \
--db kraken2_justin \
--threads 8 \
--unclassified-out uf10B#.fq \
--report 10B_test_report \
--confidence 0.25 \
--paired \
--gzip-compressed 10B_1_val_1.fq.gz 10B_2_val_2.fq.gz \

# rRNA contamination check: bowtie2. Only checking rRNA contamination rate, so no .sam files are output#
#!/bin/bash
set -euo pipefail

# === Step 1: Download SILVA rRNA reference ===
REF_DIR="/home/justinma/Downloads/silva_rrna"
mkdir -p "$REF_DIR"
cd "$REF_DIR"

if [ ! -f "SILVA_138_SSURef_NR99_tax_silva.fasta" ]; then
    echo "=== Downloading SILVA SSU rRNA reference ==="
    wget -c https://www.arb-silva.de/fileadmin/silva_databases/release_138/Exports/SILVA_138_SSURef_NR99_tax_silva.fasta.gz
    gunzip -f SILVA_138_SSURef_NR99_tax_silva.fasta.gz
fi

REF_FASTA="$REF_DIR/SILVA_138_SSURef_NR99_tax_silva.fasta"

# === Step 2: Build Bowtie2 index ===
INDEX_DIR="$REF_DIR/bowtie2_index"
mkdir -p "$INDEX_DIR"

if [ ! -f "$INDEX_DIR/silva_rrna.1.bt2" ]; then
    echo "=== Building Bowtie2 index for SILVA rRNA ==="
    bowtie2-build "$REF_FASTA" "$INDEX_DIR/silva_rrna"
fi

# === Step 3: Align your sequences to SILVA rRNA ===
READS_DIR="/home/justinma/Downloads/filtered_seq"
LOG_DIR="/home/justinma/rrna_check_logs"
mkdir -p "$LOG_DIR"

for R1 in "$READS_DIR"/*_1.fq.gz; do
    R2=${R1/_1.fq.gz/_2.fq.gz}
    SAMPLE=$(basename "$R1" _1.fq.gz)

    echo "=== Checking rRNA contamination for $SAMPLE ==="
    bowtie2 -x "$INDEX_DIR/silva_rrna" \
        -1 "$R1" -2 "$R2" \
        -q -p 13 --very-sensitive --no-unal \
        -S /dev/null \
        2> "$LOG_DIR/${SAMPLE}_bowtie2.log"

    # Extract overall alignment rate
    rate=$(grep "overall alignment rate" "$LOG_DIR/${SAMPLE}_bowtie2.log" | awk '{print $1}')
    echo "$SAMPLE : $rate rRNA contamination"
done

echo "=== All samples processed. Logs saved in $LOG_DIR ==="

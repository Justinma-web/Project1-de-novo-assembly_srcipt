#!/bin/bash
## run salmon and corset to 7 transcriptomes. 
set -euo pipefail

### Salmon quantification for multiple transcriptomes ###
WORKDIR=/home/jade/1_sandsmelt/rundrap/out_drap_s1
THREADS=20   # use 20 CPU cores

# Transcriptomes (7 total, each with a unique index name)
declare -A TRANSCRIPTOMES
TRANSCRIPTOMES["transcripts_fpkm0_s1"]=$WORKDIR/meta_BR/d-cov_filter/transcripts_fpkm_0.fa
TRANSCRIPTOMES["transcripts_fpkm1_s1"]=$WORKDIR/meta_BR/d-cov_filter/transcripts_fpkm_1.fa
TRANSCRIPTOMES["transcripts_fpkm0_s2"]=/home/jade/1_sandsmelt/rundrap/out_drap_s2/transcripts_fpkm_0.fa
TRANSCRIPTOMES["transcripts_fpkm0.5_s2"]=/home/jade/1_sandsmelt/rundrap/out_drap_s2/transcripts_fpkm_0.5.fa
TRANSCRIPTOMES["transcripts_fpkm0_s3"]=/home/jade/1_sandsmelt/rundrap/meta_s3/transcripts_fpkm_0.fa
TRANSCRIPTOMES["transcripts_fpkm0.5_s3"]=/home/jade/1_sandsmelt/rundrap/meta_s3/transcripts_fpkm_0.5.fa
TRANSCRIPTOMES["transcripts_fpkm1_s3"]=/home/jade/1_sandsmelt/rundrap/meta_s3/transcripts_fpkm_1.fa

### 1. Build indices (skip if already exist) ###
for NAME in "${!TRANSCRIPTOMES[@]}"; do
    TX=${TRANSCRIPTOMES[$NAME]}
    IDX=$WORKDIR/salmon_index_${NAME}

    if [[ -d "$IDX" && -s "$IDX/hash.bin" ]]; then
        echo "Index for $NAME already exists at $IDX — skipping."
    else
        echo "Building Salmon index for $NAME with $THREADS threads..."
        mkdir -p "$IDX"
        salmon index --threads $THREADS --index "$IDX" --transcripts "$TX"
    fi
done

### 2. Quantify reads ###
R1_FILES=(/home/jade/1_sandsmelt/rundrap/out_drap_s1/*/*/*/uf*_1.norm.fq.gz)

for R1 in "${R1_FILES[@]}"; do
    R2=${R1/_1.norm.fq.gz/_2.norm.fq.gz}
    SAMPLE=$(basename "$R1" _1.norm.fq.gz)

    for NAME in "${!TRANSCRIPTOMES[@]}"; do
        IDX=$WORKDIR/salmon_index_${NAME}
        OUT=$WORKDIR/salmon_quant/${NAME}/${SAMPLE}

        if [[ -d "$OUT" && -s "$OUT/aux_info/eq_classes.txt.gz" ]]; then
            echo "Salmon quant for $SAMPLE on $NAME already exists — skipping."
            continue
        fi

        echo "Running Salmon for sample $SAMPLE on $NAME with $THREADS threads..."
        mkdir -p "$OUT"
        salmon quant --threads $THREADS --index "$IDX" --libType A \
            --dumpEq --hardFilter --skipQuant \
            -1 "$R1" -2 "$R2" \
            --output "$OUT"

        if [ -f "$OUT/aux_info/eq_classes.txt.gz" ]; then
            gunzip -c "$OUT/aux_info/eq_classes.txt.gz" > "$OUT/aux_info/eq_classes.txt"
        fi
    done
done

echo "=== Salmon quantification completed with $THREADS threads ==="
